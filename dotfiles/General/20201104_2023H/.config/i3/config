# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

##########################
#     NOTES - Readme     #
##########################
# exec : Execute the command only on i3wm startup
# exec_always : Execute the command on startup and whenever i3wm restarts ($mod+Shift+R)
#	--no-startup-id : To execute on startup; It also executes the command with no startup messagebox


#################
# Set Variables #
#################
# Set modifier - mod1=Alt, mod4=Window/Super
set $mod 	Mod4
set $alt 	Mod1
set $bar	polybar -c ~/.config/polybar/config
# set $Locker   	"i3lock -i ~/globals/i3lock/wallpaper/png/lockscreen.png --tiling --show-failed-attempts"
# set $Locker ~/globals/i3lock/locker.sh
set $Locker ~/globals/i3lock/lock-blur.sh
set $Terminal 	i3-sensible-terminal
set $; 		semicolon
set $background_run &

##################################################################################

#########
# Fonts 
##########
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

###################################################################################

# Polybar
# exec --no-startup-id polybar --config=~/.config/polybar/config
exec_always --no-startup-id ~/.config/polybar/launch.sh

####################
# Power Management #
####################

# Turn the screen off after a delay
# pgret makes sure the i3lock is still running before
# xset turns the display off
# Operators 
#	<condition-1> ; <condition-2> - Execute Condition 1 and Condition 2 back to back regardless of success
#	<condition-1> && <condition-2> - Execute Condition 2 ONLY IF Condition 1 is successful
#	<condition-1> || <condition-2> - Execute Condition 2 ONLY IF Condition 1 failed
#	basically, is like C Programming's 
set $INACTIVITY_TIMEOUT 1
set $SLEEP_TIMEOUT 30
set $SLEEP_NOTIFIER "notify-send -u critical -t 10000 -- 'LOCKING screen in $SLEEP_TIMEOUT seconds'"
# exec_always --no-startup-id `xautolock -detectsleep -time $INACTIVITY_TIME -locker $Locker -notify $SLEEP_TIMEOUT -notifier $SLEEP_NOTIFIER`
# exec --no-startup-id xautolock -detectsleep -time $INACTIVITY_TIMEOUT -locker $Locker
# exec --no-startup-id xautolock -time 1 -locker "i3lock -i ~/globals/i3lock/wallpaper/png/lockscreen.png --tiling --show-failed-attempts"
# run xautolock using lock.sh
exec_always --no-startup-id killall xautolock
# exec_always --no-startup-id ~/globals/i3lock/autolock-launch.sh
exec_always --no-startup-id ~/globals/i3lock/autolock-launch.sh $Locker

##################################################################################

#############
# Autostart #
#############
## Background
# Set Background wallpaper on startup
exec --no-startup-id exec sh ~/.fehbg

## Nitrogen - Wallpaper setter
# NOTE: nitrogen uses non-gifs
# exec --no-startup-id exec nitrogen --restore

## Windows Compositor
exec_always picom 

## -- Set Workspace 1 as floating mode
# for_window [workspace="1"] floating enable

## -- Run startup script
## -- Start calcurse in Workspace 1
# for_window [class="calcurse"] move to workspace $ws1
# exec --no-startup-id $Terminal -e calcurse
# exec --no-startup-id $Terminal --name=calcurse -e calcurse
set $PROG_1_NAME "neix"
set $PROG_1_PATH ~/Desktop/portable/repos/neix/bin/ 
exec --no-startup-id ~/.config/i3/i3startup.sh $Terminal $PROG_1_NAME $PROG_1_PATH
set $PROG_2_NAME "calcurse"
set $PROG_2_PATH /usr/bin 
exec --no-startup-id ~/.config/i3/i3startup.sh $Terminal $PROG_2_NAME $PROG_2_PATH
for_window [title=$PROG_1_NAME] move to workspace $ws1;
for_window [title=$PROG_2_NAME] move to workspace $ws1;
# exec --no-startup-id $Terminal --name=$START_PROG_NAME -e $START_PROG_EXE 
# for_window [class="neix"] move window to $ws1

## -- Start conky on Startup : ISSUE: Conky appears on all workspaces
# exec_always --no-startup-id killall conky
# exec_always --no-startup-id sleep 3; conky -c ~/.config/conky/conky.conf &

## xss-lock
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

## Network Manager
# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

## Audio Control
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

## Variables
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod


##################################################################################

##############################
# Autostart - Create windows #
##############################

# #-- Create a DropDown/Scratchpad Window --# #
# Create a terminal window used for background scripts
# Bind to $mod+u
# Scratchpad properties:
#  - Floating
exec_always --no-startup-id $Terminal --name=dropdown -e calcurse
for_window [instance="dropdown"] floating enable
for_window [instance="dropdown"] move scratchpad; [instance="dropdown"] scratchpad show; move scratchpad
for_window [instance="dropdown"] border pixel 5

###################################################################################

####################
# Keyboard Binding #
####################
# start a terminal
bindsym $mod+Return exec $Terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Move workspace to another monitor
bindsym $mod+Control+Left move workspace to output left
bindsym $mod+Control+Right move workspace to output right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Toggle i3bar
# bar toggle, hide or show 
bindsym $mod+m bar mode toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


###########################
# Custom Keyboard Binding #
###########################

# Drop down terminal
# bindsym $mod+F12 exec --no-startup-id $Terminal --drop-down; focused
# scratchpad
bindsym $mod+F12 [instance="dropdown"] scratchpad show

# Rofi
bindsym $mod+d exec rofi -show drun -modi drun
bindsym $mod+Shift+s exec rofi -show ssh -modi ssh
bindsym $alt+Tab exec rofi -show window -modi window -theme sidebar
bindsym $mod+Shift+d exec rofi -show run -mode run

# Screenshot - Scrot
# make a script - scrot will get dmenu to enter a file path
# output to stated filepath/filename
bindsym F12 exec --no-startup-id ~/Desktop/portable/scripts/bash/screenshot.sh

# Fullscreen popup mode
bindsym $alt+z fullscreen disable; floating enable; resize set 422 240; sticky enable; move position 870 450

##################
# Assign Classes #
##################
# Assign window 2 to class "browser"
assign [class="browser"] 2

####################################
# Design - Floating with Condition #
####################################

# when window is in "floating mode"
# resize window to {width, height} and
# move its position
# for_window [class="window-class"] floating enable, resize set {width,height}, move position {left|right|up|down|center}

##############
# Scratchpad #
##############

# I only want that thing on the scratchpad named dropdown
bindsym $mod+u [instance="dropdown"] scratchpad show; [instance="dropdown"] move position center
bindsym $mod+Shift+u resize shrink height 10px or 10ppt

############################################################################################

##############
# Workspaces #
##############
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

##############################################################################################

######################t
# System Keybindings #
######################
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# i3-nagbar -t <nagbar-type> -m 'Message' -B 'Button Text' 'Button Command'
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# Lockscreen (i3lock)
bindsym $mod+Mod1+semicolon exec $Locker

###############################################################################################

####################
# Mode Definitions #
####################
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Control + Alternate + Delete
# - all in 1 power menu - reboot/restart, shutdown, logout, suspend
# bindsym Control+$alt+Delete exec "i3-nagbar -t warning -m 'Work-in-Progress All-in-one Logout, Shutdown , Restart/Reboot, Suspend button', -b 'Shutdown' , 'echo shutdown >> ~/Desktop/TestDir/powermgmt.log' , -b 'Logout' , 'echo logout >> ~/Desktop/TestDir/powermgmt.log' "
bindsym Control+$alt+Delete exec ~/Desktop/portable/scripts/bash/powermgmt.sh

########################################################################################

#######
# Bar #
#######

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#########################
#     Parameters        #
# position {top|bottom} #
# mode {hide|show}      #
#########################

# i3bar
#bar {
#    status_command i3status
#	position bottom
#	mode	 hide

#########################################################################################
#}

##############
# Background #
##############
# Background set
set $BACKGROUND_WALLPAPER	~/globals/background/png/red.png
# set $BACKGROUND_WALLPAPER	~/globals/background/jpg/fest.jpg
exec_always --no-startup-id feh --bg-max $BACKGROUND_WALLPAPER && ~/Desktop/portable/scripts/bash/update-terminal-color.sh $BACKGROUND_WALLPAPER $background_run

# use PyWal (wal -R) to set the last used colorscheme
# -R restores the last colorscheme that was in use
# exec_always --no-startup-id wal -R
# exec_always --no-startup-id wal -i $BACKGROUND_WALLPAPER $background_run

# Gaps
gaps inner 10
gaps outer 5
for_window [class="^.*"] border pixel 5
# hide_edge_borders both
# smart_gaps on

#########################################################################################
